<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Python学习回顾]]></title>
    <url>%2F2018%2F07%2F16%2FPython%E5%AD%A6%E4%B9%A0%E5%9B%9E%E9%A1%BE%2F</url>
    <content type="text"><![CDATA[关于Python3选择Python初衷是迎接人工智能和大数据时代，避免成为新世纪的文盲。我觉得懂一点编程未来会活得更主动，同时听说Python提供了非常完善的基础代码库更易学更容易站在巨人的肩膀上前进，所以在众多语言中选择了Python。其实第一次接触程序语言是在大学——C语言，但当时完全没有感觉，现在一点印象都没有了。所以这次学习要从兴趣出发，从项目出发，同时确认好学习方向。那么目前初步方向将从语法到爬虫到大数据分析到人工智能这样的路径进行深入。相信我可以走的更远。 Python的语法笔记 编码默认源码文件以UTF-8编码，所有字符串都是unicode字符串。unicode的作用是能够使计算机实现跨语言、跨平台的文本转换及处理。 命名建议只用小写字母、数字和下划线，不能以数字开头。避免与系统保留字（关键字）重复。如下：12import kewordkeword.kwlist [‘False’, ‘None’, ‘True’, ‘and’, ‘as’, ‘assert’, ‘break’, ‘class’, ‘continue’, ‘def’, ‘del’, ‘elif’, ‘else’, ‘except’, ‘finally’, ‘for’, ‘from’, ‘global’, ‘if’, ‘import’, ‘in’, ‘is’, ‘lambda’, ‘nonlocal’, ‘not’, ‘or’, ‘pass’, ‘raise’, ‘return’, ‘try’, ‘while’, ‘with’, ‘yield’] 注释 单行以#开头，多行以三个引号在注释语开始行和结束行。和Markdown中代码块引用一样。 行缩进 python不用大括号，直接用缩进来表示代码块。编码要注意缩进对程序如循环的影响。 数字类型 int（整数） bool（布尔） fload（浮点） complex（复数）如：1+2j 要从复数 z 中提取实部和虚部，使用 z.real 和 z.imag 字符串 反斜杠可以用来转义，使用r可以让反斜杠不发生转义。字符串两种索引方式，从左往右以0开始，从右往左以-1开始。使用变量[头下标：尾下标]进行截取。字符串可以用+连接，用*重复转义字符\ . 在行尾时为续行符 \n 换行 \r 回车 \f 换页字符串格式化常用 %s 格式化字符串 %d格式化整数 如 print (&quot;我叫 %s 今年 %d 岁!&quot; % (&#39;小明&#39;, 10))字符串内建函数 capitalize() 转换首字母大写 encode(encoding=’UTF-8’,errors=’strict’) 12str="love"print(str[0:-1]) # 输出第一个到倒数第二个的所有字符 结果为 lov 输出 print默认输出是换行的，如果要实现不换行要变量末尾加上 end=””需要在同一行显示运行多行语句，语句之间使用分号分隔。输出方式：表达式语句和 print() 函数。f.close() 处理文件后关闭 输入 将整个模块(somemodule)导入，格式为： import somemodule从某个模块中导入某个函数,格式为： from somemodule import somefunction从某个模块中导入多个函数,格式为： from somemodule import firstfunc, secondfunc将某个模块中的全部函数导入，格式为： from somemodule import *读写文件 open(filename,mode) r只读，r+读写 w+ 读写，编辑没有则创建新文件 变量 python变量不需要声明。每个变量在使用前必须要赋值才会被创建。 数据类型 有六种 其中3种为不可变数据 Number String Tuple(元组)和3种可变数据 List Dictionary Set (集合) 使用type()函数可以查询变量的对象类型可以使用大括号或set()函数创建集合，但创建一个空集合必须用set()不能用{}。{}表示一个空字典。 123456Number:a=520 String:str=&quot;love&quot;Tuple:(&quot;abc&quot;,1,4) List:list=[&quot;abc&quot;,1,4]Dictionary:dict=&#123;&quot;name&quot;:&quot;carlos&quot;,&quot;password&quot;:1&#125;Set:student=&#123;&quot;A&quot;,&quot;B&quot;&#125; 数据转换 函数 描述 hex(x) int to 十六进制str oct(x) int to 八进制str ord(x) 字符转为整数值 chr(x) 整数转为字符 算数运算符 正常加减乘除 % 取余数 //取整数 **取幂 比较运算符 == != &gt; &lt; &gt;= &lt;= 赋值运算符 等号在后面 如 //= += 位运算符 &amp; 按位与 | 或 ^ 异或 ~ 取反 &lt;&lt; 左移 &gt;&gt; 右移 逻辑运算符 and or not 与或非 成员运算符 in ,not in 身份运算符 is , is not is 与 == 区别：is 用于判断两个变量引用对象是否为同一个， == 用于判断引用变量的值是否相等。 数学函数 三角函数 随机数函数 if语句 if - elif - else 循环语句 while 循环 要注意避免死循环for 循环可以遍历任何序列的项目，如一个列表或者一个字符串结合break 语句用于跳出当前循环体range()函数 遍历数字序列，会生成数字序列pass 语句，用做占位语句 保持结构的完整 几个有意思是要理解的循环：123456# Fibonacci series: 斐波纳契数列# 两个元素的总和确定了下一个数a, b = 0, 1while b &lt; 10: print(b) a, b = b, a+b 运行结果： 理解赋值123456112358 1234567for i in range(0, 10, 3) : #使range以指定数字开始并指定不同的增量(甚至可以是负数，有时这也叫做'步长') print(i) 结果： 0369 12345678for n in range(2, 10): for x in range(2, n): if n % x == 0: print(n, '等于', x, '*', n//x) break else: # 循环中没有找到元素 print(n, ' 是质数') 输出结果： 理解X值的传递123456782 是质数3 是质数4 等于 2 * 25 是质数6 等于 2 * 37 是质数8 等于 2 * 49 等于 3 * 3 迭代器与生成器 迭代器用法 iter() # 创建迭代器对象 和 next() # 输出迭代器的下一个元素可以用于字符串列表或元组对象 组合for while 语句 访问集合元素生成器用法 调用yield函数以下实例使用 yield 实现斐波那契数列： 1234567891011121314151617import sys def fibonacci(n): # 生成器函数 - 斐波那契 a, b, counter = 0, 1, 0 while True: if (counter &gt; n): return yield a a, b = b, a + b counter += 1f = fibonacci(10) # f 是一个迭代器，由生成器返回生成 while True: try: print (next(f), end=" ") except StopIteration: sys.exit() 输出结果： #理解迭代器和生成器0 1 1 2 3 5 8 13 21 34 55 函数 函数能提高应用的模块性，和代码的重复利用率定义函数 def 函数名（参数列表）：调用函数的参数类型 必需参数/关键字参数/默认参数/不定长参数不定长参数 一个星号参数会以元组形式导入 两个星号会以字典形式导入 def fuctionname([formal_args,]*var_args_tuple):lambda创建匿名函数 lambda[arg1 [,arg2,····argn]]:expression 变量作用域 变量作用域决定了哪个程序可以访问哪个特定的变量名称4种 Local 局部作用域 Enclosing 闭包函数外的函数中 Global 全局作用域 Build-in 内建作用域global和nonlocal关键字 用于作用域修改，进行关键字声明。如果要修改嵌套作用域用nonlocal 数据结构常用针对数据进行修改方法： append（加元素到结尾）extend（扩充列表）insert（指定插入位置）remove（移除第一个元素）pop（指定位置元素移除）a.pop()返回最后一个元素)clear（移除列表所有） index（返回第一个值索引） ,count（出现次数）sort（排序） reverse（倒序） copy（浅复制） 模块 每个模块都有一个_name_属性当值是_main_时表明该模块自身在运行，否则是被引入dir() 找到模块内定义的所有名称应该注意到这有一个特别的模块 sys ，它内置在每一个 Python 解析器中 通用工具脚本经常调用命令行参数。这些命令行参数以链表形式存储于 sys 模块的 argv 变量pickle模块urllib.request 访问互联网发送电子邮件的 smtplib:日期和时间 datetime数据压缩 zlib,gzip,bz2,zipfile 面向对象 class ClassName:继承和多继承类的专有用法 _init_ 构造函数 ， _del_ 析构函数 正则表达式正则表达式是一个特殊的字符序列，它能帮助你方便的检查一个字符串是否与某种模式匹配。对字符串的过滤逻辑。 re.match 与 re.search区别 前者只匹配字符串的开始，如果字符串开始不符合正则表达式，则匹配失败，函数返回None；而re.search匹配整个字符串，直到找到一个匹配。re.sub 替换字符串的匹配项compile CGI common gateway interface ,通用网关接口 MySQL PyMySQL 连接数据库 -网络编程 Socket 套接字Socket servePython Internet模块 -XML解析extensible Markup Language 可扩展标记语言 -JSON数据解析 json.dumps():对数据进行编码。json.loads():对数掘进行解码。 持续更新新体会和内容]]></content>
      <tags>
        <tag>PYTHON</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Markdown文本写作]]></title>
    <url>%2F2018%2F07%2F14%2FMarkdown%E6%96%87%E6%9C%AC%E5%86%99%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[通过HEXO第一次接触到了Markdown。给人的第一感觉是很简单，整个版面看上去比较清爽，是我想要的feel。Markdown 可以通过简单、易读易写的文本格式生成结构化的HTML文档，应用广泛。基于HTML的语法可以完全用在Markdown中，当然大部分时候我们更需要用Markdown针对书写的边便捷用法，这里做一个总结。 常用语法1.标题 在句首插入#表示标题，有六种标题。也就是最多可以有6个#号表示最小字号的标题 2.列表 有序列表 数字加英文的点 如 1. 2. 3.无序列表 *+- 这三个任意一种后面文本接空格 3.引用块 在引用块的句首加&gt;嵌套引用需要缩进 比如第一次嵌套用&gt;&gt; 4.代码块 使用 ``` 进行代码块引用 这里可以接对应的代码语言名Markdown会自行使用对应的背景渲染。行内引用 可以用两个`` 夹住句子 5.链接超链接 \[A](网址 &quot;optional title&quot;) 图片链接 \![A](网址/地址 ) 地址也可以用本地路径，可以在makdown文件夹建一个picture文件夹，optional title的鼠标悬停图片上会显示，可不写。 6.强调 在字两边加一个*为斜体 在字两边加两个**为粗体 在字两边加三个***为粗斜体 记得不要有与字不要有空格 7.分割线 连续三个或以上星号或下划线或减号 都可以生成一个分割线如下 8.反斜杠 Markdown 支持将大部分符号前面加上反斜杠来帮助插入普通的符号 9.居中居右居左 居中&lt;center&gt;文本&lt;/center&gt;居右&lt;p align=&quot;right&quot;&gt;文本&lt;/p&gt;居左&lt;p align=&quot;left&quot;&gt;文本&lt;/p&gt; 10.换行&lt;/br&gt;或两个或以上空格 进阶语法1.表格 使用|分隔不同的单元格，使用-分隔表头与其它行右对齐------: ，左对齐 :------居中对齐---:---，默认居中对齐------示例： 12日期 |天气 | 心情 :-- | -:- |---:B | A | C 日期 天气 心情 B A C 注意：这里有个坑，我试了很多次才找出来。：冒号一定要在英文状态下打，不然识别不了。然后-数量不限定，可以一个也可以多个。 2.图表 图表有更多代码。参考这里这种用的少，需要用的时候可以再来调取用法。 3.字体字号和颜色 &lt;font face=&quot;黑体&quot;&gt;我是黑体字&lt;/font&gt;&lt;font face=&quot;微软雅黑&quot;&gt;我是微软雅黑&lt;/font&gt;&lt;font face=&quot;STCAIYUN&quot;&gt;我是华文彩云&lt;/font&gt;&lt;font color=#0099ff size=7 face=&quot;黑体&quot;&gt;color=#0099ff size=72 face=&quot;黑体&quot;&lt;/font&gt;&lt;font color=#00ffff size=72&gt;color=#00ffff&lt;/font&gt;&lt;font color=gray size=72&gt;color=gray&lt;/font&gt; Size：规定文本的尺寸大小。可能的值：从 1 到 7 的数字。浏览器默认值是 3 。颜色是按十六进制颜色值来的。常用的红色（#FF0000）金色（#FFD700）黄色（#FFFF00） 4.图片居中 居中，在图片引用上一栏加 &lt;div alighn=center&gt; 改变图片大小&lt;img src=&quot;./xxx.png 路径&quot; width = &quot;300&quot; height = &quot;200&quot; alt=&quot;图片名称&quot; /&gt; 可能会导致图变形，用的少 5.待办事宜 横框+空格+方括号+空格+文本 通过方括号内加入X来区别已办未办，注意方括号也要有空格。 爬山 [X] 走向人生巅峰 [X] K歌 冷门用法1.删除线 使用 ~~ 将要删除文字夹起来。表示删除 HAPPYDAY 2.注脚 使用 [^footer] 表示注脚，注意一个引用要写两次。如下 玫瑰是什么颜色[^footer1][^footer1]: 玫瑰是红的。 玫瑰是什么颜色[^footer1][^footer1]: 玫瑰是红的。 3.页内跳转 使用html代码实现页内跳转。在要跳转到的位置定义个锚&lt;span id = &quot;jump&quot;&gt;World&lt;/span&gt;，然后使用[HELLO](#jump)将你好设置为一单击即跳转到WORLD所在位置的效果 12[HELLO](#jump) &lt;span id = &quot;jump&quot;&gt;World&lt;/span&gt; HELLOWorld 4.LateX公式 行内公式：使用两个”$”符号引用公式: $公式$行间公式：使用两对“$$”符号引用公式： $$公式$$这个其实挺复杂，参考这里。 5.首行缩进 半方大的空白&amp;ensp;或&amp;#8194;【常用】全方大的空白&amp;emsp;或&amp;#8195;不断行的空白格&amp;nbsp;或&amp;#160; 间距如下：&ensp;AAA&emsp;AAA&nbsp;AAA 总结基本用法能解决大部分情景，高阶用法一般和HTML语法整合的多，但是用的少。如果想更好的进阶可以学习一下HTML语法。一个原则，常用的要能熟练内化为自己的潜意识，少用的要收录起来需要时可以最短时间内调用。]]></content>
      <tags>
        <tag>MARKDOWN</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用Hexo部署到Github建立极简博客]]></title>
    <url>%2F2018%2F07%2F13%2F%E7%94%A8Hexo%E9%83%A8%E7%BD%B2%E5%88%B0Github%E5%BB%BA%E7%AB%8B%E6%9E%81%E7%AE%80%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[通过HEXO迅速搭建属于自己的博客是一件很开心很有价值的事情。开心在于，自己可以按喜好定制界面风格，价值在于拥有了一个可以输出的地方。 搭建环境Hexo是目前很流行的博客框架，我选择了它。对应的同类可能还有很多如Jekyll(ruby)，Pelican(python)，Hexo(javascript)。各有各的好，但缘分这东西谁说的准。Nodejs是一个基于 Chrome V8 引擎的 JavaScript 运行环境，它的npm是全球最大的开源库生态系统。第一次见，好厉害的样子。Git是目前世界上最先进的分布式版本控制系统（没有之一），对应的是集中式版本控制系统 （CSV、SVN)。上面三个东西就是需要我们安装到本地的基础三件套。 安装GitWindows: Download &amp; install git 安装Nodejs先安装nvm，这是Nodejs版本管理器。也可参考RUNOOB.COM的安装。 $ brew install node通过 node –version 和 npm –version 检查是否安装成功。 安装Hexo上面的环境匹配好后，安装Hexo就是一句话的事~ $ npm install hexo-cli -g 操作Hexo完成博客创建这里要用到一些基本的指令最常用的就有下面这些123456$ hexo init [folder] #新建网站$ hexo g #生成generate静态文件$ hexo s #启动服务器。可以进行预览 http://localhost:4000/ $ hexo d #部署deploy网站$ hexo clean #清除缓存文件和静态文件 可以理解为修改后刷新一下$ hexo new [postname] #生成新的博客文件 1.新建myblog文件夹正式开始，打开Gitbash窗口12345$ hexo init myblog$ cd myblog$ npm install$ npm g$ npm s Surprise，surprise，你已经成功的在本地创建了一个你的博客文件夹。同时会生成一个以landscap主题的静态文件页面，可以通过 http://localhost:4000/ 进行访问。2.找中意的Hexo主题并使用它这里最经典的是next主题，极简风。Hexo库里面有很多很赞的风格供选择。由于next选择的人多，所以对应的个性化配置教程也会更多些，前期作为熟悉基本操作也建议使用这个，后面对于很多地方理解透了再自由发挥。找到中意的theme后，点击进入github找到对应的网址如：https://github.com/theme-next/hexo-theme-next 然后运行clone指令如下：12$ cd myblog$ git clone https://github.comiissnan/hexo-theme-next themes/next #下载next主题到本地 3.创建github属于你的repository注册一个属于你的github帐号，这里按正常流程走下来就ok。然后创建一个自己的仓库，可以参考官方的帮助文档[creating a new repository]（https://help.github.com/articles/creating-a-new-repository/） 。这里需要注意的是Repository name 要和Owner的名字一样并且以特定的格式来 如 username.github.io 。以我的为例就是 https://github.com/CarlosPython/CarlosPython.github.io。4.简单修改站点配置文件myblog文件夹中有两个_config.yaml文件，这里需要做一下区分，官方将根目录中的叫做站点配置文件，them主题目录下的叫做主题配置文件。到这里我们需要找到根目录下站点配置文件myblog/_config.yaml 修改一些东西。12345678910111213141516title: Minimalistsubtitle: description:authour: CarlosChenlanguage: en #也可以用中文的zh-Hanstimezone: ------# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: next #这里改为下载好的主题名-----deploy: #最底部 type: git repo: https://github.com/CarlosPython/CarlosPython.github.io.git #很重要不要弄错了 branch: master 基本设置完成后，就可以用 $ hexo s在http://localhost:4000/预览一下改动后的效果了。针对主题的一些细节优化升级可以后面再处理。5.布署博客到github12$ npm i -s hexo-deployer-git #安装hexo-deploy-git$ hexo d 期间第一次用，会需要验证登陆git，照常登陆就OK。此时刷新一下，就可以看到你的博客在git域名了，比如我的https：//CarlosPython.github.io6.创建一个博客文章试试1$ hexo new postname #创建以postname为名的.md文件 用Markdown编辑器就可以写博客了，我用的是sublime 3。最后上传到git1$ hexo g 可能会遇到的问题解决1.$ hexo s预览时提示4000端口被占用。我是直接退出gitbash再开就ok了，网上说要改端口什么的觉得麻烦。2.中文title 显示乱码。语言改为中文的对应格式3.无法Ping通Github。Push的时候报错如下：123456$ git push -u orgin masterssh: Could not resolve hosname github.com:Temporary fail in name resolutionfatal: Could not read from remote repository.Please make sure you have the correct access rights and the repository exists. 解决： ctrl+r输入cmd调出命令提示符，ping一下github.com。 会显示 Ping 请求找不到主机github.com。请检查该名称，然后重试。这个时候需要在host文件作个修改 hosts文件路径： C:\Windows\System32\drivers\etc右键-属性-安全-编辑，选中当前电脑登录的用户，给自己最高权限，确认。用记事本打开后在最后一行加： 12345678192.30.253.113 github.com192.30.252.131 github.com185.31.16.185 github.global.ssl.fastly.net74.125.237.1 dl-ssl.google.com173.194.127.200 groups.google.com192.30.252.131 github.com185.31.16.185 github.global.ssl.fastly.net74.125.128.95 ajax.googleapis.com 保存，然后再ping,发现就有数据了。 3.其它的不知道什么鬼的。直接删除文件夹从来，有点粗暴但很管用，很多时候刚用修改或执行一些步骤理解不到位就会报错，试了几次没法就直接重来一次。 进阶方向 Hexo主题优化进阶 Github绑定自己的域名 Markdown文本写作 EndingHappy posting!]]></content>
      <tags>
        <tag>HEXO</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F07%2F13%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
